#! /usr/bin/env bash

# check that DOTFILES variable is defined
# relative path handling is tricky and never foolproof
# refs
#   - http://mywiki.wooledge.org/BashFAQ/028
#   - https://stackoverflow.com/questions/6659689/referring-to-a-file-relative-to-executing-script
# shellcheck disable=SC1090
source "${BASH_SOURCE%/*}/check_dotfiles_variable.sh"

# run in separate subshells

printf '\x1b[38;5;006mstarting odotfiles setup\x1b[0m\n\n'

# set up Homebrew and all packages from `$DOTFILES/Brewfile`
# `source` so that Homebrew is added to PATH for future setup steps
source "$DOTFILES/infra/setup/bin/setup_brew" || {
  echo 'Homebrew installation had at least one failure'
  echo 'This can often be flaky and only prevent use of a package or two'
  echo 'If the error looks more severe you may want to investigate more'
}

# symlink config files to their correct locations
"$DOTFILES/infra/setup/bin/symlink"

# set up our shell (`zsh`)
# this adds `zsh` to our allowed shells and sets it as the default. Then it
# loads `zsh` for the first time to install plugins & complete setup.
"$DOTFILES/infra/setup/bin/setup_zsh"

printf '\n\n\x1b[38;5;006msetup finished! \x1b[0mðŸŽ‰\n'
printf '\x1b[38;5;006mstarting new shell, happy coding\x1b[0m\n'
zsh -i
